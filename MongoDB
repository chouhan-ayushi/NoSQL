https://drive.google.com/file/d/1958zbYWKsF-QwLfAF1nvOQsLyAl9yrGy/view?usp=drive_link
https://drive.google.com/file/d/17rk6V5p9Km7ouJdu7OgVn_2yMJcbRI-A/view?usp=drive_link
https://drive.google.com/file/d/19VFASWyeJpW6P-QtsyUKLiFDVpw8T8lx/view?usp=drive_link
https://drive.google.com/file/d/1gi-6pEmgxhJYn8H8cqANowXFXw1in2bL/view?usp=drive_link

//How to add one column
University>  db.student.insertOne({roll_no:2344444, name:"ayush", standard:12, marks: 93})

//How to add multiple columns together?
test> show dbs
University  40.00 KiB
admin       40.00 KiB
config      72.00 KiB
local       72.00 KiB
test> use University
switched to db University
University> show collections
student
University> db.student.find()
[
  {
    _id: ObjectId('675d4028b9d3ec20770deb30'),
    name: 'Ayushi',
    standard: '12',
    marks: 94,
    age: 21,
    rollno: 322222
  }
]
University> db.student.insertMany([{name:"shivani", standard:12, marks: 93},{name:"Mahak", standard:11, age:23},{name:"shivam", standard:12, marks: 97, rollno: 23344444, phone_no:98543422888}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('675d4ea5870de1ad670deb30'),
    '1': ObjectId('675d4ea5870de1ad670deb31'),
    '2': ObjectId('675d4ea5870de1ad670deb32')
  }
}
University> db.student.find()
[
  {
    _id: ObjectId('675d4028b9d3ec20770deb30'),
    name: 'Ayushi',
    standard: '12',
    marks: 94,
    age: 21,
    rollno: 322222
  },
  {
    _id: ObjectId('675d4ea5870de1ad670deb30'),
    name: 'shivani',
    standard: 12,
    marks: 93
  },
  {
    _id: ObjectId('675d4ea5870de1ad670deb31'),
    name: 'Mahak',
    standard: 11,
    age: 23
  },
  {
    _id: ObjectId('675d4ea5870de1ad670deb32'),
    name: 'shivam',
    standard: 12,
    marks: 97,
    rollno: 23344444,
    phone_no: 98543422888
  }
]

// How to add an array in the JSON in MongoDB
University> db.student.insertOne({name:"anurag",subject:["web","java"]})
{
  acknowledged: true,
  insertedId: ObjectId('675d5214bf1ddf27330deb30')
}

//how to add sample data in MongoDB (with Mongodb compass)
https://github.com/neelabalan/mongodb-sample-dataset

//how to add sample data in MongoDB (without Mongodb compass) in cmd
cd Downloads
mongoimport --db new_weather_db --collection_weather_data --file data.json;

//how much document in collection - count()
Weather> db.weather_data.find().count()
10000

// how to get certain number of documents?
Weather> db.weather_data.find().limit(3)

// how to set offset(to skip some records)
db.weather_data.find().skip(5).limit(2)

//how to filter records based on a condition
 db.weather_data.find({type: 'FM-13'}).count()
9994
//projections
 db.weather_data.find({type: 'FM-13'},{position: true,skyCondition:true})
//you can also pass first argument as an empty object
 db.weather_data.find({},{position: true,skyCondition:true})
//If we want to exclude some properties
db.weather_data.find({},{position: false,skyCondition:false}).limit(3)
//how to delete a document
 /db.weather_data.deleteOne( { st: 'x+45200-066500'})
{ acknowledged: true, deletedCount: 1 }
Weather> db.weather_data.find().count()
9999
Weather> db.weather_data.find({st: 'x+45200-066500'}).count()
0
(similarly we use findOneDelete)

/Weather> db.weather_data.find({callLetters: 'FNPG'}).count()
8
Weather> db.weather_data.deleteMany({callLetters: 'FNPG'})
{ acknowledged: true, deletedCount: 8 }
Weather> db.weather_data.find().count()
9991
/ db.weather_data.deleteOne({ _id:ObjectId('5553a998e4b02cf7151190ba')})
{ acknowledged: true, deletedCount: 1 }
Weather> db.weather_data.find({ _id:ObjectId('5553a998e4b02cf7151190ba')})

// how to update a record
 db.weather_data.updateOne({ _id: ObjectId('5553a998e4b02cf7151190b8')}, {$set:{ elevation: 9997}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
Weather> db.weather_data.find().limit(2)

 db.weather_data.updateOne({ _id: ObjectId('5553a998e4b02cf7151190bb')}, {$inc:{ elevation: 1}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
Weather>  db.weather_data.find().limit(2)

db.weather_data.updateOne({ _id: ObjectId('5553a998e4b02cf7151190b8')}, {$inc:{elevation:-1}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
Weather>  db.weather_data.find().limit(2)

//how to get distinct values of a perticular key?
Weather> db.weather_data.distinct("type")
[ 'FM-13', 'SAO' ]
Weather> db.weather_data.distinct("callLetters")

//Operators
$ne ->not equal
$eq ->equals
$lt ->less than
$lte ->less than equal
$gt ->greater than
$gte ->greater than equal
$and ->logical and
$or ->logical or
$not ->logical not
$nor ->logical nor
$in ->for checking an array
$nin ->not in array
Weather> db.weather_data.find({type:{$ne:'FM-13'}}).count()
6

Weather>  db.weather_data.find({"dewPoint.value":{$lt:999}}).count()
4876

Weather>  db.weather_data.find({"dewPoint.value":{$gt:999}}).count()
5114

Weather> db.weather_data.find({$and:[{"dewPoint.value":{$lt:999}},{"dewPoint.value":{$gt:999}}]}).count()
0

0
Weather> db.weather_data.find({callLetters:{$in:['3EHH','3EIZ','3EJF']}}).co
unt()
17

//Analysing Queries
 db.weather_data.find({type:'SAQ'}).explain("executionStats")

// to create an index
db.weather_data.createIndex({elevation: 1})//(if decending order then -1)
elevation_1
db.weather_data.getIndexes() (see all indexes)
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { elevation: 1 }, name: 'elevation_1' }
]

//to remove an index from a collection
 db.weather_data.dropIndex('elevation_1')













